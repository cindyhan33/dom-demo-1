{"version":3,"sources":["dom.js"],"names":["window","dom","find","selector","scope","document","querySelectorAll","style","node","name","value","arguments","length","Object","object","key","each","nodeList","fn","i","call","create","string","container","createElement","innerHTML","trim","content","firstChild","after","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","setAttribute","getAttribute","text","innerText","textContent","html","class","add","className","classList","has","contains","on","eventName","addEventListener","off","removeEventListener","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","index","list"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACXC,EAAAA,IADW,gBACNC,QADM,EACIC,KADJ,EACW;AACpB,WAAO,CAACA,KAAK,IAAIC,QAAV,EAAoBC,gBAApB,CAAqCH,QAArC,CAAP;AACD,GAHU;AAIXI,EAAAA,KAJW,iBAILC,IAJK,EAICC,IAJD,EAIOC,KAJP,EAIc;AACvB,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B;AACAJ,MAAAA,IAAI,CAACD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB;AACD,KAHD,MAGO,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACjC,UAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACA,eAAOD,IAAI,CAACD,KAAL,CAAWE,IAAX,CAAP;AACD,OAHD,MAGO,IAAIA,IAAI,YAAYI,MAApB,EAA4B;AACjC;AACA,YAAMC,MAAM,GAAGL,IAAf;;AACA,aAAK,IAAIM,GAAT,IAAgBD,MAAhB,EAAwB;AACtBN,UAAAA,IAAI,CAACD,KAAL,CAAWQ,GAAX,IAAkBD,MAAM,CAACC,GAAD,CAAxB,CADsB,CACS;AAChC;AACF;AACF;AACF,GApBU;AAqBXC,EAAAA,IArBW,gBAqBNC,QArBM,EAqBIC,EArBJ,EAqBQ;AACjB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACL,MAA7B,EAAqCO,CAAC,EAAtC,EAA0C;AACxCD,MAAAA,EAAE,CAACE,IAAH,CAAQ,IAAR,EAAcH,QAAQ,CAACE,CAAD,CAAtB;AACD;AACF,GAzBU;AA2BXE,EAAAA,MA3BW,kBA2BJC,MA3BI,EA2BI;AACb,QAAMC,SAAS,GAAGlB,QAAQ,CAACmB,aAAT,CAAuB,UAAvB,CAAlB,CADa,CACyC;;AACtDD,IAAAA,SAAS,CAACE,SAAV,GAAsBH,MAAM,CAACI,IAAP,EAAtB;AACA,WAAOH,SAAS,CAACI,OAAV,CAAkBC,UAAzB;AACD,GA/BU;AAgCXC,EAAAA,KAhCW,iBAgCLrB,IAhCK,EAgCCsB,KAhCD,EAgCQ;AACjBtB,IAAAA,IAAI,CAACuB,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAoCtB,IAAI,CAACyB,WAAzC,EADiB,CACsC;AACxD,GAlCU;AAkCR;AACHC,EAAAA,MAnCW,kBAmCJ1B,IAnCI,EAmCEsB,KAnCF,EAmCS;AAClBtB,IAAAA,IAAI,CAACuB,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAoCtB,IAApC;AACD,GArCU;AAsCX2B,EAAAA,MAtCW,kBAsCJC,MAtCI,EAsCI5B,IAtCJ,EAsCU;AACnB4B,IAAAA,MAAM,CAACC,WAAP,CAAmB7B,IAAnB;AACD,GAxCU;AAyCX8B,EAAAA,IAzCW,gBAyCN9B,IAzCM,EAyCA4B,MAzCA,EAyCQ;AACjBnC,IAAAA,GAAG,CAACiC,MAAJ,CAAW1B,IAAX,EAAiB4B,MAAjB,EADiB,CACS;;AAC1BnC,IAAAA,GAAG,CAACkC,MAAJ,CAAWC,MAAX,EAAmB5B,IAAnB,EAFiB,CAES;AAC3B,GA5CU;AA6CX+B,EAAAA,MA7CW,kBA6CJ/B,IA7CI,EA6CE;AACXA,IAAAA,IAAI,CAACuB,UAAL,CAAgBS,WAAhB,CAA4BhC,IAA5B;AACA,WAAOA,IAAP;AACD,GAhDU;AAiDXiC,EAAAA,KAjDW,iBAiDLjC,IAjDK,EAiDC;AACV,QAAQkC,UAAR,GAAuBlC,IAAvB,CAAQkC,UAAR,CADU,CACmB;;AAC7B,QAAMC,KAAK,GAAG,EAAd;AACA,QAAIC,CAAC,GAAGpC,IAAI,CAACoB,UAAb;;AACA,WAAOgB,CAAP,EAAU;AACRD,MAAAA,KAAK,CAACE,IAAN,CAAW5C,GAAG,CAACsC,MAAJ,CAAW/B,IAAI,CAACoB,UAAhB,CAAX;AACAgB,MAAAA,CAAC,GAAGpC,IAAI,CAACoB,UAAT;AACD;;AACD,WAAOe,KAAP;AACD,GA1DU;AA2DXG,EAAAA,IA3DW,gBA2DNtC,IA3DM,EA2DAC,IA3DA,EA2DMC,KA3DN,EA2Da;AACtB;AACA,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BJ,MAAAA,IAAI,CAACuC,YAAL,CAAkBtC,IAAlB,EAAwBC,KAAxB;AACD,KAFD,MAEO,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACjC,aAAOJ,IAAI,CAACwC,YAAL,CAAkBvC,IAAlB,CAAP;AACD;AACF,GAlEU;AAmEXwC,EAAAA,IAnEW,gBAmENzC,IAnEM,EAmEAc,MAnEA,EAmEQ;AACjB;AACA,QAAIX,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,UAAI,mBAAJ,EAAyB;AACvBJ,QAAAA,IAAI,CAAC0C,SAAL,GAAiB5B,MAAjB;AACD,OAFD,MAEO;AACLd,QAAAA,IAAI,CAAC2C,WAAL,GAAmB7B,MAAnB;AACD;AACF,KAND,MAMO,IAAIX,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACjC,UAAI,mBAAJ,EAAyB;AACvB,eAAOJ,IAAI,CAAC0C,SAAZ;AACD,OAFD,MAEO;AACL,eAAO1C,IAAI,CAAC2C,WAAZ;AACD;AACF;AACF,GAlFU;AAmFXC,EAAAA,IAnFW,gBAmFN5C,IAnFM,EAmFAc,MAnFA,EAmFQ;AACjB,QAAIX,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BJ,MAAAA,IAAI,CAACiB,SAAL,GAAiBH,MAAjB;AACD,KAFD,MAEO,IAAIX,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACjC,aAAOJ,IAAI,CAACiB,SAAZ;AACD;AACF,GAzFU;AA0FX4B,EAAAA,KAAK,EAAE;AACLC,IAAAA,GADK,eACD9C,IADC,EACK+C,SADL,EACgB;AACnB/C,MAAAA,IAAI,CAACgD,SAAL,CAAeF,GAAf,CAAmBC,SAAnB;AACD,KAHI;AAILhB,IAAAA,MAJK,kBAIE/B,IAJF,EAIQ+C,SAJR,EAImB;AACtB/C,MAAAA,IAAI,CAACgD,SAAL,CAAejB,MAAf,CAAsBgB,SAAtB;AACD,KANI;AAOLE,IAAAA,GAPK,eAODjD,IAPC,EAOK+C,SAPL,EAOgB;AACnB,aAAO/C,IAAI,CAACgD,SAAL,CAAeE,QAAf,CAAwBH,SAAxB,CAAP;AACD;AATI,GA1FI;AAqGXI,EAAAA,EArGW,cAqGRnD,IArGQ,EAqGFoD,SArGE,EAqGS1C,EArGT,EAqGa;AACtBV,IAAAA,IAAI,CAACqD,gBAAL,CAAsBD,SAAtB,EAAiC1C,EAAjC;AACD,GAvGU;AAwGX4C,EAAAA,GAxGW,eAwGPtD,IAxGO,EAwGDoD,SAxGC,EAwGU1C,EAxGV,EAwGc;AACvBV,IAAAA,IAAI,CAACuD,mBAAL,CAAyBH,SAAzB,EAAoC1C,EAApC;AACD,GA1GU;AA2GXkB,EAAAA,MA3GW,kBA2GJ5B,IA3GI,EA2GE;AACX,WAAOA,IAAI,CAACuB,UAAZ;AACD,GA7GU;AA8GXiC,EAAAA,QA9GW,oBA8GFxD,IA9GE,EA8GI;AACb,WAAOA,IAAI,CAACwD,QAAZ;AACD,GAhHU;AAiHXC,EAAAA,QAjHW,oBAiHFzD,IAjHE,EAiHI;AACb,WAAO0D,KAAK,CAACC,IAAN,CAAW3D,IAAI,CAACuB,UAAL,CAAgBiC,QAA3B,EAAqCI,MAArC,CAA4C,UAACC,CAAD;AAAA,aAAOA,CAAC,KAAK7D,IAAb;AAAA,KAA5C,CAAP,CADa,CAEb;AACD,GApHU;AAqHX8D,EAAAA,IArHW,gBAqHN9D,IArHM,EAqHA;AACT,QAAIoC,CAAC,GAAGpC,IAAI,CAACyB,WAAb;;AACA,WAAOW,CAAC,IAAIA,CAAC,CAAC2B,QAAF,KAAe,CAA3B,EAA8B;AAC5B3B,MAAAA,CAAC,GAAGA,CAAC,CAACX,WAAN;AACD;;AACD,WAAOW,CAAP;AACD,GA3HU;AA4HX4B,EAAAA,QA5HW,oBA4HFhE,IA5HE,EA4HI;AACb,QAAIoC,CAAC,GAAGpC,IAAI,CAACiE,eAAb;;AACA,WAAO7B,CAAC,IAAIA,CAAC,CAAC2B,QAAF,KAAe,CAA3B,EAA8B;AAC5B3B,MAAAA,CAAC,GAAGA,CAAC,CAAC6B,eAAN;AACD;;AACD,WAAO7B,CAAP;AACD,GAlIU;AAmIX8B,EAAAA,KAnIW,iBAmILlE,IAnIK,EAmIC;AACV,QAAMmE,IAAI,GAAG1E,GAAG,CAAC+D,QAAJ,CAAaxD,IAAI,CAACuB,UAAlB,CAAb;AACA,QAAIZ,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwD,IAAI,CAAC/D,MAArB,EAA6BO,CAAC,EAA9B,EAAkC;AAChC,UAAIwD,IAAI,CAACxD,CAAD,CAAJ,KAAYX,IAAhB,EAAsB;AACpB;AACD;AACF;;AACD,WAAOW,CAAP;AACD;AA5IU,CAAb","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  find(selector, scope) {\r\n    return (scope || document).querySelectorAll(selector);\r\n  },\r\n  style(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      //dom.style(div,'color','red')\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        //dom.style(div,'color')\r\n        return node.style[name];\r\n      } else if (name instanceof Object) {\r\n        //dom.style(div,{color:'red'})\r\n        const object = name;\r\n        for (let key in object) {\r\n          node.style[key] = object[key]; //key是个变量，所以用[]括起来\r\n        }\r\n      }\r\n    }\r\n  },\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  },\r\n\r\n  create(string) {\r\n    const container = document.createElement(\"template\"); //创建一个标签节点\r\n    container.innerHTML = string.trim();\r\n    return container.content.firstChild;\r\n  },\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling); //想在node的后面插，相当于在node后面的接口前面插\r\n  }, //找到这个节点的爸爸，调用爸爸的insertBefore方法，然后把node2插到node的下一个节点的前面\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node);\r\n  },\r\n  append(parent, node) {\r\n    parent.appendChild(node);\r\n  },\r\n  wrap(node, parent) {\r\n    dom.before(node, parent); //把div3放到div2前面\r\n    dom.append(parent, node); //然后把div3放到div2里面\r\n  },\r\n  remove(node) {\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n  },\r\n  empty(node) {\r\n    const { childNodes } = node; //直接从node里获取childNodes\r\n    const array = [];\r\n    let x = node.firstChild;\r\n    while (x) {\r\n      array.push(dom.remove(node.firstChild));\r\n      x = node.firstChild;\r\n    }\r\n    return array;\r\n  },\r\n  attr(node, name, value) {\r\n    //重载(根据参数个数的不同写代码，就叫重载)\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(name);\r\n    }\r\n  },\r\n  text(node, string) {\r\n    //适配\r\n    if (arguments.length === 2) {\r\n      if (\"innerText in node\") {\r\n        node.innerText = string;\r\n      } else {\r\n        node.textContent = string;\r\n      }\r\n    } else if (arguments.length === 1) {\r\n      if (\"innerText in node\") {\r\n        return node.innerText;\r\n      } else {\r\n        return node.textContent;\r\n      }\r\n    }\r\n  },\r\n  html(node, string) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string;\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    }\r\n  },\r\n  class: {\r\n    add(node, className) {\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className);\r\n    },\r\n    has(node, className) {\r\n      return node.classList.contains(className);\r\n    },\r\n  },\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn);\r\n  },\r\n  off(node, eventName, fn) {\r\n    node.removeEventListener(eventName, fn);\r\n  },\r\n  parent(node) {\r\n    return node.parentNode;\r\n  },\r\n  children(node) {\r\n    return node.children;\r\n  },\r\n  siblings(node) {\r\n    return Array.from(node.parentNode.children).filter((n) => n !== node);\r\n    //因为children是伪数组，所以要把它变成数组\r\n  },\r\n  next(node) {\r\n    let x = node.nextSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  },\r\n  previous(node) {\r\n    let x = node.previousSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  },\r\n  index(node) {\r\n    const list = dom.children(node.parentNode);\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  },\r\n};\r\n"]}